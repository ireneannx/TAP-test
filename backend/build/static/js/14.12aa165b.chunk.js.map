{"version":3,"sources":["Feeds/action.js","Feeds/components/newTextEditor.js","Feeds/components/newFeedCard.js","Feeds/components/feed-area.js"],"names":["getFeedPosts","dispatch","a","axios","defaults","headers","common","localStorage","getItem","get","res","type","payload","data","addFeedPost","id","name","avatarURL","console","log","text","content","author","post","then","catch","err","response","inlineToolbarPlugin","createInlineToolbarPlugin","InlineToolbar","emojiPlugin","createEmojiPlugin","EmojiSelect","NewTextEditor","state","editorState","EditorState","createEmpty","userId","userName","onChange","setState","onSubmit","e","preventDefault","getCurrentContent","getPlainText","props","push","ContentState","createFromText","this","auth","user","_id","style","margin","className","plugins","placeholder","length","disabled","marginLeft","marginTop","React","Component","connect","Feed","feeds","Auth","authData","bindActionCreators","NewFeedCard","handleClick","posts","history","map","index","key","width","height","src","alt","onClick","fontSize","marginRight","format","createdAt","withRouter","FeedArea"],"mappings":"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","file":"static/js/14.12aa165b.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport function getFeedPosts() {\r\n\r\n    return async function (dispatch) {\r\n        axios.defaults.headers.common['Authorization'] =  localStorage.getItem('thsToken')\r\n        const res = await axios.get('/posts')\r\n        return dispatch({\r\n            type: \"GET\",\r\n            payload: res.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function addFeedPost(data, id, name, avatarURL) {\r\n    console.log('recieved by action', data)\r\n    let text = {\r\n        content: data,\r\n        author: id,\r\n        name: name,\r\n        avatarURL: avatarURL\r\n    }\r\n\r\n    return async function (dispatch) {\r\n        await axios.post('/posts', text, {\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem('thsToken')\r\n            }\r\n        }) //user id needs to be attached here \r\n            .then(() => {\r\n                return dispatch({\r\n                    type: \"ADD\",\r\n                    payload: text\r\n                })\r\n            })\r\n            .catch((err) => console.log(err.response))\r\n    }\r\n}","import React from 'react'\r\nimport { EditorState, ContentState } from 'draft-js';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { addFeedPost, getFeedPosts } from '../action'\r\nimport axios from 'axios'\r\n// import draftToHtml from \"draftjs-to-html\";\r\nimport '../../App.css'\r\n// import { withRouter } from 'react-router'\r\n\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createInlineToolbarPlugin from 'draft-js-inline-toolbar-plugin';\r\nimport createEmojiPlugin from 'draft-js-emoji-plugin';\r\n\r\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\r\nconst { InlineToolbar } = inlineToolbarPlugin;\r\nconst emojiPlugin = createEmojiPlugin();\r\nconst { EmojiSelect } = emojiPlugin;\r\n\r\nclass NewTextEditor extends React.Component {\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        userId: \"\",\r\n        userName: \"\",\r\n        avatarURL: \"\"\r\n    }\r\n\r\n   async  componentWillMount() {\r\n      await  this.props.getFeedPosts();\r\n      const res = await axios.get(`/users/img/${this.props.auth.user._id}`)\r\n       await  this.setState({\r\n            userId: this.props.auth.user._id,\r\n            userName: this.props.auth.user.name,\r\n            avatarURL: res.data\r\n        })\r\n    }\r\n\r\n    onChange = (editorState) => this.setState({ editorState })\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state.editorState.getCurrentContent().getPlainText());\r\n\r\n        // let text = draftToHtml(this.state.editorState.getCurrentContent().getPlainText());\r\n        let text = this.state.editorState.getCurrentContent().getPlainText();\r\n\r\n        // console.log('authdata', this.props.auth.user._id);\r\n\r\n        // if (this.props.auth.user) {\r\n            var id = await this.state.userId\r\n            var name = await this.state.userName\r\n            var avatarURL = await this.state.avatarURL\r\n\r\n            await this.props.addFeedPost(text, id, name, avatarURL);\r\n            await this.props.getFeedPosts();\r\n\r\n            const editorState = EditorState.push(this.state.editorState, ContentState.createFromText(''));\r\n            this.setState({ editorState });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{margin:\"0 auto\"}}>\r\n                <form onSubmit={(e) => this.onSubmit(e)}>\r\n                    <div className=\"card posts\" style={{ margin:\"20px auto\"}}>\r\n                        <div className=\"card-body\">\r\n                            <div >\r\n                                <Editor\r\n                                    plugins={[emojiPlugin, inlineToolbarPlugin]}\r\n                                    editorState={this.state.editorState}\r\n                                    onChange={this.onChange}\r\n                                    placeholder=\"What's Happening\"\r\n                                />\r\n                            </div>\r\n                            <div className='toolbar-options'>\r\n\r\n                                {\r\n                                    (this.state.editorState.getCurrentContent().getPlainText().length >= 1)\r\n                                        ? <button type=\"submit\" className=\"btn btn-primary btn-sm\" >Submit Post</button>\r\n                                        : <button type=\"submit\" className=\"btn btn-primary btn-sm\" disabled>Submit Post</button>\r\n                                }\r\n\r\n                                <div style={{ marginLeft: '10px', marginTop: '2px' }}>\r\n                                    <EmojiSelect />\r\n                                    <InlineToolbar />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.Feed.feeds,\r\n        auth: state.Auth.authData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n    addFeedPost,\r\n    getFeedPosts\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTextEditor)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFeedPosts } from \"../action\";\r\nimport { withRouter } from \"react-router\";\r\nimport { format } from \"timeago.js\";\r\nclass NewFeedCard extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFeedPosts();\r\n  }\r\n\r\n  handleClick = posts => {\r\n    // console.log('author is ',this.props)\r\n    this.props.history.push(`/profile/${posts.author}`);\r\n  };\r\n\r\n  render() {\r\n    // console.log('d   ata from editor', props.data)\r\n    // console.log('from show card', this.props)\r\n\r\n    if (this.props.data) {\r\n      // console.log('for name of author',this.props.data)\r\n      return (\r\n        <div>\r\n          {this.props.data.map((posts, index) => (\r\n            <div key={index} >\r\n              {/* CARD */}\r\n            \r\n              <div className=\"card gedf-card posts\" > \r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <div className=\"mr-2\">\r\n                        <img\r\n                          className=\"rounded-circle\"\r\n                          width=\"45\" height=\"45\"\r\n                          src={posts.avatarURL}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"ml-2\">\r\n                        <div\r\n                          className=\"h5 m-0 user\"\r\n                          onClick={() => this.handleClick(posts)}\r\n                        >\r\n                          {posts.name}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n\r\n                  <div key={posts._id}>{posts.content}</div>\r\n                </div>\r\n                <div className=\"card-footer\" style={{height:\"50px\"}}>\r\n                  <div className=\"left\">\r\n                    <p className=\"card-link\" style={{fontSize:\"20px\"}}>\r\n                      <i className=\"fa fa-thumbs-up\"></i> Like\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-muted h7 mb-2 right\">\r\n                    <i className=\"fa fa-clock\" style={{ marginRight: \"10px\" }}></i>\r\n                    {format(posts.createdAt)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            <br/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.Feed.feeds\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getFeedPosts\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(NewFeedCard)\r\n);\r\n","import React from 'react';\r\nimport NewTextEditor from './newTextEditor';\r\nimport NewFeedCard from './newFeedCard';\r\n\r\nclass FeedArea extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                   \r\n\r\n                    <div>\r\n                        <NewTextEditor />\r\n                        <NewFeedCard />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FeedArea;"],"sourceRoot":""}