{"version":3,"sources":["Jobs/AddJob.js","Jobs/JobAction.js"],"names":["AddJob","state","deadline","Date","company_name","job_type","job_description","url","user_id","props","data","user","_id","name","handleChange","e","setState","target","value","handleChange2","date","handleSubmit","a","preventDefault","addJob","history","className","style","marginTop","justifyContent","onSubmit","this","backgroundImage","type","placeholder","onChange","rows","id","selected","minDate","to","marginLeft","Component","connect","Auth","authData","dispatch","bindActionCreators","getJobs","axios","get","res","payload","job","post","push","frontendLike","JobId","UserId"],"mappings":"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","file":"static/js/12.2f1c691c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addJob, getJobs } from './JobAction';\r\nimport { bindActionCreators } from 'redux';\r\nimport '../App.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//import axios from 'axios'\r\n\r\nclass AddJob extends Component {\r\n  state = {\r\n    deadline: new Date(),\r\n    company_name: \"\",\r\n    job_type: \"\",\r\n    job_description: \"\",\r\n    url: \"\",\r\n    user_id: this.props.data.user._id,\r\n    name: this.props.data.user.name\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChange2 = date => {\r\n    this.setState({\r\n      deadline: date\r\n    });\r\n  };\r\n\r\n\r\n  handleSubmit = async e => {\r\n    //should push using axios.push from here INCLUDING startDate\r\n    e.preventDefault();\r\n    //accessing userID from the redux store props\r\n\r\n    await this.props.addJob(this.state, this.props.history)\r\n\r\n\r\n\r\n  }\r\n  render() {\r\n    // console.log(\"props from AddJob\", this.props);\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"container contact\" style={{\r\n          marginTop: \"5%\",\r\n          justifyContent: \"center\"\r\n        }}>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\" style={{ backgroundImage: \"url('https://cms-assets.tutsplus.com/uploads/users/107/posts/26488/image/41-space-scrolling-background850.jpg')\" }}>\r\n\r\n\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-9\">\r\n                <div className=\"contact-form\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\">Company</label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input type=\"text\" name=\"company_name\" value={this.state.company_name} className=\"form-control\" placeholder=\"enter company name\" onChange={this.handleChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-3\">Available Position/s</label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input type=\"text\" className=\"form-control\" value={this.state.job_type} name=\"job_type\" placeholder=\"Eg: Front-end\" onChange={this.handleChange} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-3\" >Job Description</label>\r\n                    <div className=\"col-sm-10\">\r\n                      <textarea className=\"form-control\" rows=\"5\" id=\"comment\" name=\"job_description\" value={this.state.job_description} onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-3\">Application link</label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input className=\"form-control\" placeholder=\"Enter application url or company website\" name=\"url\" onChange={this.handleChange} value={this.state.url} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-3\" >Deadline</label>\r\n                    <div className=\"col-sm-10\">\r\n                      <DatePicker className=\"col-sm-3 form-group\"\r\n                        selected={this.state.deadline}\r\n                        onChange={this.handleChange2}\r\n                        minDate={new Date()}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"col-sm-offset-2 col-sm-10\">\r\n                      <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\r\n                      <Link to=\"/jobs\"><button type=\"button\" className=\"btn btn-danger\" style={{ marginLeft: \"5px\" }}>Cancel</button></Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.Auth.authData //redux store with user_id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addJob, getJobs }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddJob);","import axios from 'axios'\r\n\r\nexport const getJobs = () => {\r\n  return async function (dispatch) {\r\n\r\n    const res = await axios.get(\"/api/jobs\");\r\n    // console.log(\"here is the res for jobs\", res)\r\n\r\n    return dispatch({\r\n      type: \"GET_JOBS\",\r\n      payload: res.data\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const addJob = (job, history) => {\r\n  return async function (dispatch) {\r\n    //this object includes user_id(who made the post) as well as all the job data contained in job. Will be accessible in the backend in req.body\r\n\r\n    const res = await axios.post(\"/api/jobs\", job);\r\n\r\n    history.push(\"/jobs\") //this needs to be done in the addJob dispatch function rather than in AddJob.js after we do this.props.getJob(). Otherwise the new job will not get added when we redirect \r\n    return dispatch({\r\n      type: \"ADD_JOB\",\r\n      payload: res.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const frontendLike = (JobId, UserId) => {\r\n\r\n  return function (dispatch) {\r\n    return dispatch({\r\n      type: \"ADD_ID_TO_JOB\",\r\n      JobId: JobId,\r\n      UserId: UserId\r\n    })\r\n  }\r\n}"],"sourceRoot":""}